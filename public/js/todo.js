"use strict";function getTodos(){return new Promise(function(t){request("/api/todos").then(function(o){todos=o,t()})["catch"](function(o){todos=[],t()})})}function renderTodoList(){return new Promise(function(t){if(todoListEl.empty(),todos.length>0){var o=todos.map(function(t){var o=t.id,n=t.task,e="",i='<a href="#" style="text-decoration:none; color:red;" title="Delete">\n          [<i class="glyphicon glyphicon-trash"></i>]\n        </a>';return t.done&&(n="<del>"+t.task+"</del>",e=" checked"),'<div class="checkbox">\n          <label>\n            <input type="checkbox"'+e+' todo-id="'+o+'" class="todo-checkbox"> '+n+" "+i+"\n          </label>\n        </div>"}).join("");todoListEl.append(o),todoListEl.append('<button class="btn btn-danger">Delete Selected</button>')}else todoListEl.append("You have no todo for now.");t()})}function saveTodo(){var t=taskFieldEl.val();return new Promise(function(o,n){return t.length<1?void n("Todo shouldn't empty."):void request("/api/todos","POST",{task:t}).then(function(t){o(t)})["catch"](function(t){n(t)})})}function updateTodoStatus(t,o){return new Promise(function(n,e){request("/api/todos/"+t,"PUT",{done:o}).then(function(t){n(t)})["catch"](function(t){e(t)})})}function mounted(){renderTodoList().then(function(){getTodos().then(function(){renderTodoList()})})}var todos=[],todoListEl=$("#todo-list"),taskFieldEl=$("#task"),submitBtnEl=$("#submit");submitBtnEl.click(function(){saveTodo().then(function(){taskFieldEl.val(""),getTodos().then(function(){renderTodoList()})})["catch"](function(t){alert(t)})}),$(document).ready(function(){$("#todo-list").on("click",".todo-checkbox",function(t){var o=$(t.target),n=o.attr("todo-id"),e=o.is(":checked");updateTodoStatus(n,e).then(function(){t.preventDefault(),getTodos().then(function(){renderTodoList()})})["catch"](function(t){alert(t)})}),mounted()});