"use strict";function getTodos(){return new Promise(function(t){request("/api/todos").then(function(o){todos=o,t()})["catch"](function(o){todos=[],t()})})}function renderTodoList(){return new Promise(function(t){if(todoListEl.empty(),todos.length>0){var o=todos.map(function(t){var o=t.id,e=t.task,n="",d='<a href="#" style="text-decoration:none; color:red;" title="Delete" class="todo-delete" todo-id="'+o+'">\n          [<i class="glyphicon glyphicon-trash" todo-id="'+o+'"></i>]\n        </a>';return t.done&&(e="<del>"+t.task+"</del>",n=" checked"),'<div class="checkbox">\n          <label>\n            <input type="checkbox"'+n+' todo-id="'+o+'" class="todo-checkbox"> '+e+" "+d+"\n          </label>\n        </div>"}).join("");todoListEl.append(o),todoListEl.append('<button class="btn btn-danger todo-delete-bulk">Delete Selected</button>')}else todoListEl.append("You have no todo for now.");t()})}function saveTodo(){var t=taskFieldEl.val();return new Promise(function(o,e){return t.length<1?void e("Todo shouldn't empty."):void request("/api/todos","POST",{task:t}).then(function(t){o(t)})["catch"](function(t){e(t)})})}function updateTodoStatus(t,o){return new Promise(function(e,n){request("/api/todos/"+t,"PUT",{done:o}).then(function(t){e(t)})["catch"](function(t){n(t)})})}function deleteTodo(t){return new Promise(function(o,e){request("/api/todos/"+t,"DELETE").then(function(t){o(t)})["catch"](function(t){e(t)})})}function deleteBulkTodos(){return new Promise(function(t,o){request("/api/todos/delete-bulk","POST",{id:selectedTodos}).then(function(){t()})["catch"](function(t){o(t)})})}function mounted(){renderTodoList().then(function(){getTodos().then(function(){renderTodoList(),$(".todo-checkbox:checked").each(function(t,o){var e=$(o).attr("todo-id");selectedTodos.push(e)})})})}var todos=[],todoListEl=$("#todo-list"),taskFieldEl=$("#task"),submitBtnEl=$("#submit"),selectedTodos=[];submitBtnEl.click(function(){saveTodo().then(function(){taskFieldEl.val(""),getTodos().then(function(){renderTodoList()})})["catch"](function(t){alert(t)})}),$(document).ready(function(){$("#todo-list").on("click",".todo-checkbox",function(t){var o=$(t.target),e=o.attr("todo-id"),n=o.is(":checked");if(n)selectedTodos.push(e);else{var d=selectedTodos.indexOf(e);d>-1&&selectedTodos.splice(d,1)}updateTodoStatus(e,n).then(function(){t.preventDefault(),getTodos().then(function(){renderTodoList()})})["catch"](function(t){alert(t)})}),$("#todo-list").on("click",".todo-delete",function(t){var o=$(t.target).attr("todo-id");deleteTodo(o).then(function(){t.preventDefault(),getTodos().then(function(){renderTodoList()})})["catch"](function(t){alert(t)})}),$("#todo-list").on("click",".todo-delete-bulk",function(){selectedTodos.length>0&&deleteBulkTodos().then(function(){selectedTodos=[],getTodos().then(function(){renderTodoList()})})["catch"](function(t){alert(t)})}),mounted()});